<UserControl x:Class="TeaTime.UI.CSVImportView" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.11.0"
        xmlns:uih="clr-namespace:TeaTime.UI"
        xmlns:Converters="clr-namespace:TeaTime.Converters;assembly=DiscreteLogics.TeaTime.Common.UI"
        xmlns:UI="clr-namespace:TeaTime.UI;assembly=DiscreteLogics.TeaTime.Common.UI"
        Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}" x:Name="control">

    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static uih:CSVImportView.BrowseSourceFileCommand}" Executed="BrowseSourceFileExecuted" CanExecute="BrowseSourceFileCanExecute"/>
        <CommandBinding Command="{x:Static uih:CSVImportView.BrowseTargetFileCommand}" Executed="BrowseTargetFileExecuted" CanExecute="BrowseTargetFileCanExecute"/>
        <CommandBinding Command="{x:Static uih:CSVImportView.ImportCommand}" Executed="ImportExecuted" CanExecute="ImportCanExecute"/>
    </UserControl.CommandBindings>

    <UserControl.Resources>
        <ResourceDictionary>
            <Converters:Not x:Key="Not"/>
            <uih:RowToCellConverter x:Key="RowToCellConverter"/>

            <Style TargetType="{x:Type Border}" x:Key="{x:Type Border}">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBorderKey}}"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="NameText">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                <Setter Property="TextAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0,4,0"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="0,8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Margin="8,0,8,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="4"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Source File -->
            <TextBlock Text="File:" Style="{StaticResource NameText}"/>
            <UI:MruComboBox Text="{Binding Parameters.CSVFileName}" ItemsSource="{Binding MruFileNames}" Grid.Column="1"/>
            <Button Grid.Column="2" Command="{x:Static uih:CSVImportView.BrowseSourceFileCommand}"
                        Padding="10,0" Margin="4,0,0,0" ToolTip="Browse">...</Button>

            <!-- Target File -->
            <TextBlock Grid.Row="2" Text="Target File:" Style="{StaticResource NameText}"/>
            <UI:MruComboBox Text="{Binding Parameters.TargetFileName}" ItemsSource="{Binding MruTargetFileNames}" Grid.Column="1" Grid.Row="2"/>
            <Button Grid.Column="2" Grid.Row="2" Command="{x:Static uih:CSVImportView.BrowseTargetFileCommand}"
                    Padding="10,0" Margin="4,0,0,0" ToolTip="Browse">...</Button>
        </Grid>

        <!-- Parameters -->
        <Border BorderThickness="0,1" Grid.Row="1">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                <Grid Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="4"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="4"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="32"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Text="Delimiter(*):" Style="{StaticResource NameText}" Margin="8,0,4,0" ToolTipService.ShowDuration="120000000" ToolTip="\t for tab. leave empty to consider any whitespace" />
                    <TextBox Text="{Binding Parameters.FieldDelimeters, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>
                    <TextBlock Text="DateTime Format:" Style="{StaticResource NameText}" Grid.Column="2"/>
                    <TextBox Text="{Binding Parameters.DateTimeFormat, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3"/>

                    <TextBlock Text="Decimal Separator:" Style="{StaticResource NameText}" Grid.Row="2" Margin="8,0,4,0"/>
                    <TextBox Text="{Binding Parameters.DecimalSeparator, UpdateSourceTrigger=PropertyChanged}" MaxLength="1" Grid.Row="2" Grid.Column="1" />
                    <TextBlock Text="First Line holds Fieldnames" Style="{StaticResource NameText}" Grid.Row="2"  Grid.Column="2" Margin="8,0,4,0"/>
                    <CheckBox Margin="0,4,0,0" IsChecked="{Binding Parameters.FirstLineHoldsFieldNames, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="3"></CheckBox>

                    <TextBlock Text="TargetType Name:" Style="{StaticResource NameText}" Grid.Row="4"/>
                    <TextBox Text="{Binding Parameters.TargetTypeName}" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="4"/>
                </Grid>
            </ScrollViewer>
        </Border>

        <Border BorderThickness="0,0,0,1" Grid.Row="2">
            <StackPanel Orientation="Vertical" Margin="8">
                <RadioButton GroupName="overwrite" IsChecked="{Binding Parameters.OverwriteExistingFile, UpdateSourceTrigger=PropertyChanged}">Overwrite existing file</RadioButton>
                <RadioButton GroupName="append" IsChecked="{Binding Parameters.OverwriteExistingFile, Converter={StaticResource Not}, UpdateSourceTrigger=PropertyChanged}" Margin="0,4,0,0">Append to existing file</RadioButton>
            </StackPanel>
        </Border>

        <!-- Preview -->
        <Grid Margin="8" Grid.Row="3">
            <DataGrid x:Name="previewGrid" IsReadOnly="True" AutoGenerateColumns="False"
                      ItemsSource="{Binding Preview}" HorizontalScrollBarVisibility="Auto"
                      HeadersVisibility="Column" VerticalGridLinesBrush="Black" HorizontalGridLinesBrush="Black">
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Preview.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <ComboBox Grid.Row="0"
                                                  SelectedItem="{Binding FieldTypeDesc, Mode=TwoWay}"
                                                  ItemsSource="{Binding DataContext.AllFieldTypeDescs, ElementName=control}"
                                                  DisplayMemberPath="Name"
                                                  SelectionChanged="FieldTypeChanged"
                                                  BorderThickness="0,0,1,1"/>

                                        <TextBox Grid.Row="1" Text="{Binding Name, Mode=TwoWay}" BorderBrush="Black" BorderThickness="0,0,1,1"
                                                 Padding="2"/>
                                        
                                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Width" Value="8" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Cursor" Value="SizeWE" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Width" Value="8" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Cursor" Value="SizeWE" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RowToCellConverter}}"
                                            Background="#F0F0F0" SnapsToDevicePixels="True">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Parsed}" Value="False">
                                                        <Setter Property="BorderBrush" Value="Red"/>
                                                        <Setter Property="BorderThickness" Value="2"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Foreground="Black">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Margin" Value="4,0"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Parsed}" Value="True">
                                                            <Setter Property="Margin" Value="4,2"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Please select a file" Foreground="{DynamicResource {x:Static vsfx:VsBrushes.GrayTextKey}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Preview.Count}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
        
        <Button HorizontalAlignment="Right" Grid.Row="4" Margin="8,0" Padding="16,2" IsDefault="True"
                Command="{x:Static uih:CSVImportView.ImportCommand}">Import</Button>
    </Grid>
</UserControl>
